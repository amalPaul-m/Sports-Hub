{"stack":"ReferenceError: not add coupon data\n    at postAddCoupon (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\coupon.js:51:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"coupon","action":"addCoupon","level":"error","message":"not add coupon data","timestamp":"2025-08-11T06:22:16.670Z"}
{"originalMessage":"couponSchem is not defined","stack":"ReferenceError: couponSchem is not defined\n    at postAddCoupon (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\coupon.js:51:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"coupon","action":"addCoupon","level":"error","message":"Failed to add coupon","timestamp":"2025-08-11T06:28:45.838Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T08:45:00.780Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T08:46:40.133Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T08:49:27.746Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T08:53:36.128Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T08:56:03.189Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T08:58:19.627Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:02:42.899Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:03:53.959Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:10:30.620Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot access 'orderId' before initialization","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:12:36.316Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:13:23.612Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:16:57.627Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:17:48.876Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:21:31.582Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:23:09.690Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:25:47.786Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:28:36.592Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:30:58.070Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:32:07.223Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:34:29.193Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:35:17.477Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:35:27.297Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:37:30.910Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:39:33.902Z"}
{"controller":"orderslist","action":"acceptReturn","returnId":"6894584914ef6048edacc9d7","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:46:09.030Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:56:06.900Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:57:01.009Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:57:34.428Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T09:59:01.562Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T10:00:54.123Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T10:02:18.940Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T10:03:46.493Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T10:04:50.419Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T10:06:34.090Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T10:07:12.868Z"}
{"controller":"orderslist","action":"acceptReturn","error":"Cannot read properties of null (reading '_id')","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T10:07:58.288Z"}
{"controller":"orderslist","action":"acceptReturn","error":"email is not defined","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T10:12:15.236Z"}
{"controller":"orderslist","action":"acceptReturn","error":"usersData is not defined","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T10:14:16.595Z"}
{"controller":"orderslist","action":"acceptReturn","error":"usersData is not defined","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T10:14:49.596Z"}
{"controller":"orderslist","action":"acceptReturn","error":"usersData is not defined","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T10:16:13.130Z"}
{"controller":"orderslist","action":"acceptReturn","error":"usersData is not defined","level":"error","message":"Error accepting return request","timestamp":"2025-08-11T10:19:04.555Z"}
{"originalMessage":"orders validation failed: productInfo.0.regularPrice: Path `regularPrice` is required., productInfo.1.regularPrice: Path `regularPrice` is required.","stack":"ValidationError: orders validation failed: productInfo.0.regularPrice: Path `regularPrice` is required., productInfo.1.regularPrice: Path `regularPrice` is required.\n    at Document.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at Subdocument.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","controller":"youraccount","action":"cancelEntairOrder","level":"error","message":"Failed to cancel entire order","timestamp":"2025-08-11T14:02:13.861Z"}
{"error":"calculateNetOrderTota is not defined","controller":"dashboard","action":"getDashboard","level":"error","message":"Error fetching dashboard data","timestamp":"2025-08-12T06:41:20.628Z"}
{"controller":"wallet","action":"createWalletOrder","level":"error","message":"Failed to create wallet order","timestamp":"2025-08-12T07:03:41.349Z"}
{"originalMessage":"Cast to embedded failed for value \"{\n  type: 'add',\n  amount: NaN,\n  description: 'Wallet Recharge via Razorpay',\n  transactionId: 'pay_R4KlYBNfxCZNEZ'\n}\" (type Object) at path \"transaction\" because of \"CastError\"","stack":"CastError: Cast to embedded failed for value \"{\n  type: 'add',\n  amount: NaN,\n  description: 'Wallet Recharge via Razorpay',\n  transactionId: 'pay_R4KlYBNfxCZNEZ'\n}\" (type Object) at path \"transaction\" because of \"CastError\"\n    at SchemaDocumentArray.cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schema\\documentArray.js:502:19)\n    at SchemaType.applySetters (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at castUpdateVal (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\helpers\\query\\castUpdate.js:577:22)\n    at walkUpdatePath (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\helpers\\query\\castUpdate.js:317:26)\n    at castUpdate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\helpers\\query\\castUpdate.js:144:7)\n    at model.Query._castUpdate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4851:10)\n    at model.Query._updateThunk (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4039:25)\n    at model.Query._updateOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4127:23)\n    at model.Query.exec (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async walletPaymentSuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\wallet.js:85:9)","controller":"wallet","action":"walletPaymentSuccess","level":"error","message":"Failed to process wallet payment success","timestamp":"2025-08-12T07:04:04.432Z"}
{"controller":"wallet","action":"createWalletOrder","level":"error","message":"Failed to create wallet order","timestamp":"2025-08-12T07:04:20.272Z"}
{"controller":"wallet","action":"createWalletOrder","level":"error","message":"Failed to create wallet order","timestamp":"2025-08-12T07:04:35.272Z"}
{"controller":"wallet","action":"createWalletOrder","level":"error","message":"Failed to create wallet order","timestamp":"2025-08-12T07:05:19.651Z"}
{"controller":"checkout","action":"createRazorpayOrder","userId":null,"level":"error","message":"Failed to create Razorpay order","timestamp":"2025-08-12T07:05:38.096Z"}
{"controller":"wallet","action":"createWalletOrder","level":"error","message":"Failed to create wallet order","timestamp":"2025-08-12T07:08:20.276Z"}
{"controller":"wallet","action":"createWalletOrder","level":"error","message":"Failed to create wallet order","timestamp":"2025-08-12T07:09:14.663Z"}
{"controller":"wallet","action":"createWalletOrder","level":"error","message":"Failed to create wallet order","timestamp":"2025-08-12T07:09:28.417Z"}
{"controller":"wallet","action":"createWalletOrder","level":"error","message":"Failed to create wallet order","timestamp":"2025-08-12T07:14:46.253Z"}
{"controller":"wallet","action":"createWalletOrder","level":"error","message":"Failed to create wallet order","timestamp":"2025-08-12T07:15:21.137Z"}
{"controller":"wallet","action":"createWalletOrder","level":"error","message":"Failed to create wallet order","timestamp":"2025-08-12T07:16:53.767Z"}
{"controller":"wallet","action":"createWalletOrder","level":"error","message":"Failed to create wallet order","timestamp":"2025-08-12T07:20:24.595Z"}
{"message":"Error in exportPdfSalesReport","stack":"TypeError: D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\views\\salesreport-export.hbs: options.fn is not a function\n    at model.<anonymous> (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\app.js:245:29)\n    at model.wrapper (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\internal\\wrapHelper.js:15:19)\n    at eval (eval at createFunctionContext (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\compiler\\javascript-compiler.js:262:23), <anonymous>:11:539)\n    at Object.prog [as fn] (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\runtime.js:268:12)\n    at model.<anonymous> (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\helpers\\if.js:29:22)\n    at model.wrapper (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\internal\\wrapHelper.js:15:19)\n    at eval (eval at createFunctionContext (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\compiler\\javascript-compiler.js:262:23), <anonymous>:19:47)\n    at prog (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\runtime.js:268:12)\n    at execIteration (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\helpers\\each.js:51:19)\n    at Object.<anonymous> (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\helpers\\each.js:61:13)\n    at Object.wrapper (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\internal\\wrapHelper.js:15:19)\n    at Object.eval [as main] (eval at createFunctionContext (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\compiler\\javascript-compiler.js:262:23), <anonymous>:17:49)\n    at main (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\runtime.js:208:32)\n    at ret (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\runtime.js:212:12)\n    at ret (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\compiler\\compiler.js:519:21)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\hbs\\lib\\hbs.js:93:19","controller":"salesreport","action":"exportPdfSalesReport","query":{},"level":"error","timestamp":"2025-08-13T07:11:36.174Z"}
{"message":"Error in exportPdfSalesReport","stack":"TypeError: D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\views\\salesreport-export.hbs: options.inverse is not a function\n    at model.<anonymous> (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\app.js:253:48)\n    at model.wrapper (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\internal\\wrapHelper.js:15:19)\n    at eval (eval at createFunctionContext (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\compiler\\javascript-compiler.js:262:23), <anonymous>:11:950)\n    at Object.prog [as inverse] (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\runtime.js:268:12)\n    at model.<anonymous> (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\helpers\\if.js:27:22)\n    at model.wrapper (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\internal\\wrapHelper.js:15:19)\n    at eval (eval at createFunctionContext (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\compiler\\javascript-compiler.js:262:23), <anonymous>:19:47)\n    at prog (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\runtime.js:268:12)\n    at execIteration (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\helpers\\each.js:51:19)\n    at Object.<anonymous> (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\helpers\\each.js:61:13)\n    at Object.wrapper (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\internal\\wrapHelper.js:15:19)\n    at Object.eval [as main] (eval at createFunctionContext (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\compiler\\javascript-compiler.js:262:23), <anonymous>:17:49)\n    at main (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\runtime.js:208:32)\n    at ret (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\runtime.js:212:12)\n    at ret (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\handlebars\\dist\\cjs\\handlebars\\compiler\\compiler.js:519:21)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\hbs\\lib\\hbs.js:93:19","controller":"salesreport","action":"exportPdfSalesReport","query":{},"level":"error","timestamp":"2025-08-13T07:33:38.403Z"}
{"controller":"offers","action":"postAddCategoryOffers","error":"wishlistSchema is not defined","level":"error","message":"Error post add category offers","timestamp":"2025-08-13T09:02:17.386Z"}
{"controller":"offers","action":"deleteOffers","error":"Cannot read properties of null (reading 'category')","level":"error","message":"Error deleting offer","timestamp":"2025-08-13T09:16:44.713Z"}
{"controller":"offers","action":"postEditProductOffers","error":"Cannot read properties of null (reading 'category')","level":"error","message":"Error post edit product offers","timestamp":"2025-08-13T09:17:05.840Z"}
{"controller":"offers","action":"postAddCategoryOffers","error":"Cannot set headers after they are sent to the client","level":"error","message":"Error post add category offers","timestamp":"2025-08-13T09:26:32.779Z"}
{"controller":"offers","action":"postAddCategoryOffers","error":"Cannot set headers after they are sent to the client","level":"error","message":"Error post add category offers","timestamp":"2025-08-13T09:32:57.140Z"}
{"controller":"offers","action":"postEditProductOffers","error":"Cannot read properties of null (reading 'category')","level":"error","message":"Error post edit product offers","timestamp":"2025-08-13T10:40:05.303Z"}
{"controller":"offers","action":"postEditProductOffers","error":"Cannot read properties of null (reading 'category')","level":"error","message":"Error post edit product offers","timestamp":"2025-08-13T10:42:47.253Z"}
{"controller":"offers","action":"postEditProductOffers","error":"Cannot read properties of null (reading 'category')","level":"error","message":"Error post edit product offers","timestamp":"2025-08-13T10:43:25.461Z"}
{"controller":"offers","action":"postEditProductOffers","error":"Cannot read properties of null (reading 'category')","level":"error","message":"Error post edit product offers","timestamp":"2025-08-13T10:47:04.488Z"}
{"controller":"offers","action":"postEditProductOffers","error":"Cannot read properties of null (reading 'category')","level":"error","message":"Error post edit product offers","timestamp":"2025-08-13T10:49:15.609Z"}
{"controller":"offers","action":"postEditProductOffers","error":"Cannot read properties of null (reading 'category')","level":"error","message":"Error post edit product offers","timestamp":"2025-08-13T10:50:44.620Z"}
{"originalMessage":"orders validation failed: orderId: Path `orderId` is required.","stack":"ValidationError: orders validation failed: orderId: Path `orderId` is required.\n    at Document.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","controller":"checkout","action":"createRazorpayOrder","userId":null,"level":"error","message":"Failed to create Razorpay order","timestamp":"2025-08-14T08:57:59.735Z"}
{"originalMessage":"orders validation failed: orderId: Path `orderId` is required.","stack":"ValidationError: orders validation failed: orderId: Path `orderId` is required.\n    at Document.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","controller":"checkout","action":"createRazorpayOrder","userId":null,"level":"error","message":"Failed to create Razorpay order","timestamp":"2025-08-14T09:02:11.194Z"}
{"originalMessage":"orders validation failed: orderId: Path `orderId` is required.","stack":"ValidationError: orders validation failed: orderId: Path `orderId` is required.\n    at Document.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","controller":"checkout","action":"createRazorpayOrder","userId":null,"level":"error","message":"Failed to create Razorpay order","timestamp":"2025-08-14T09:04:55.579Z"}
{"originalMessage":"E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"\" }","stack":"MongoServerError: E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"\" }\n    at InsertOneOperation.execute (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\collection.js:157:16)","controller":"checkout","action":"createRazorpayOrder","userId":null,"level":"error","message":"Failed to create Razorpay order","timestamp":"2025-08-14T09:10:52.152Z"}
{"originalMessage":"E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"\" }","stack":"MongoServerError: E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"\" }\n    at InsertOneOperation.execute (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\collection.js:157:16)","controller":"checkout","action":"createRazorpayOrder","userId":null,"level":"error","message":"Failed to create Razorpay order","timestamp":"2025-08-14T09:11:34.364Z"}
{"originalMessage":"E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"\" }","stack":"MongoServerError: E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"\" }\n    at InsertOneOperation.execute (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\collection.js:157:16)","controller":"checkout","action":"createRazorpayOrder","userId":null,"level":"error","message":"Failed to create Razorpay order","timestamp":"2025-08-14T09:14:04.486Z"}
{"originalMessage":"E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"\" }","stack":"MongoServerError: E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"\" }\n    at InsertOneOperation.execute (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\collection.js:157:16)","controller":"checkout","action":"createRazorpayOrder","userId":null,"level":"error","message":"Failed to create Razorpay order","timestamp":"2025-08-14T09:16:12.235Z"}
{"originalMessage":"newOrderOnline is not defined","stack":"ReferenceError: newOrderOnline is not defined\n    at getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:686:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-14T09:19:01.989Z"}
{"originalMessage":"Cannot read properties of null (reading 'productInfo')","stack":"TypeError: Cannot read properties of null (reading 'productInfo')\n    at getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:688:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-14T09:22:38.481Z"}
{"originalMessage":"user is not defined","stack":"ReferenceError: user is not defined\n    at getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:710:17)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-14T09:25:43.855Z"}
{"originalMessage":"totalAmount is not defined","stack":"ReferenceError: totalAmount is not defined\n    at getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:715:17)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-14T09:47:45.345Z"}
{"originalMessage":"E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: null }","stack":"MongoServerError: E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: null }\n    at InsertOneOperation.execute (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\collection.js:157:16)","controller":"checkout","action":"createRazorpayOrder","userId":null,"level":"error","message":"Failed to create Razorpay order","timestamp":"2025-08-15T05:11:39.023Z"}
{"originalMessage":"E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: null }","stack":"MongoServerError: E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: null }\n    at InsertOneOperation.execute (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\collection.js:157:16)","controller":"checkout","action":"createRazorpayOrder","userId":null,"level":"error","message":"Failed to create Razorpay order","timestamp":"2025-08-15T05:13:55.146Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:593:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:46:18.030Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:593:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:46:23.089Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:593:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:46:25.165Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:593:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:47:26.986Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:593:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:47:29.713Z"}
{"originalMessage":"order_Id is not defined","stack":"ReferenceError: order_Id is not defined\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:590:51)\n    at Layer.handle [as handle_request] (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at checkBlockedUser (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\middleware\\checkBlockedUser.js:24:5)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:49:43.388Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:593:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:50:37.304Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:593:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:52:59.272Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:593:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:53:29.850Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:593:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:53:33.194Z"}
{"controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:55:35.042Z"}
{"controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:55:35.654Z"}
{"controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:55:37.101Z"}
{"controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:56:53.259Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:593:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T06:58:52.428Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:594:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T07:00:50.092Z"}
{"originalMessage":"Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"orders\"","stack":"CastError: Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"orders\"\n    at SchemaObjectId.cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\cast.js:319:34)\n    at Query.cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:591:23)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T07:04:45.720Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:594:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T07:05:35.126Z"}
{"originalMessage":"Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"orders\"","stack":"CastError: Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"orders\"\n    at SchemaObjectId.cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\cast.js:319:34)\n    at Query.cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:591:23)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T10:28:21.903Z"}
{"originalMessage":"Cannot read properties of null (reading 'paymentInfo')","stack":"TypeError: Cannot read properties of null (reading 'paymentInfo')\n    at retryRazorpayOrder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:594:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T10:30:20.539Z"}
{"controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T10:31:38.574Z"}
{"controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T10:31:39.415Z"}
{"controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T10:32:28.504Z"}
{"controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T10:34:28.797Z"}
{"controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T10:34:38.442Z"}
{"controller":"checkout","action":"retryRazorpayOrder","userId":null,"level":"error","message":"Failed to retry Razorpay order","timestamp":"2025-08-15T10:42:28.514Z"}
{"originalMessage":"orderId is not defined","stack":"ReferenceError: orderId is not defined\n    at getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:731:67)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-15T10:48:13.494Z"}
{"originalMessage":"orderId is not defined","stack":"ReferenceError: orderId is not defined\n    at getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:731:67)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-15T10:58:43.833Z"}
{"originalMessage":"Cannot read properties of null (reading 'productInfo')","stack":"TypeError: Cannot read properties of null (reading 'productInfo')\n    at getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:736:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-15T11:06:08.183Z"}
{"originalMessage":"Cast to ObjectId failed for value \"SportsHub-2025-0201\" (type string) at path \"_id\" for model \"orders\"","stack":"CastError: Cast to ObjectId failed for value \"SportsHub-2025-0201\" (type string) at path \"_id\" for model \"orders\"\n    at SchemaObjectId.cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\cast.js:390:32)\n    at Query.cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOneAndUpdate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:3454:8)\n    at model.Query.exec (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:653:7)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-15T11:11:23.919Z"}
{"originalMessage":"transactionHistory validation failed: amount: Path `amount` is required.","stack":"ValidationError: transactionHistory validation failed: amount: Path `amount` is required.\n    at Document.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-15T11:15:33.542Z"}
{"originalMessage":"transactionHistory validation failed: orderId: Path `orderId` is required., amount: Path `amount` is required.","stack":"ValidationError: transactionHistory validation failed: orderId: Path `orderId` is required., amount: Path `amount` is required.\n    at Document.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-16T05:12:19.743Z"}
{"originalMessage":"transactionHistory validation failed: amount: Path `amount` is required.","stack":"ValidationError: transactionHistory validation failed: amount: Path `amount` is required.\n    at Document.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-16T05:13:30.292Z"}
{"originalMessage":"transactionHistory validation failed: amount: Path `amount` is required.","stack":"ValidationError: transactionHistory validation failed: amount: Path `amount` is required.\n    at Document.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-16T05:19:45.022Z"}
{"originalMessage":"transactionHistory validation failed: orderId: Path `orderId` is required., amount: Path `amount` is required.","stack":"ValidationError: transactionHistory validation failed: orderId: Path `orderId` is required., amount: Path `amount` is required.\n    at Document.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-16T05:21:58.334Z"}
{"originalMessage":"transactionHistory validation failed: amount: Path `amount` is required.","stack":"ValidationError: transactionHistory validation failed: amount: Path `amount` is required.\n    at Document.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-16T05:30:54.427Z"}
{"originalMessage":"Cannot read properties of null (reading 'productInfo')","stack":"TypeError: Cannot read properties of null (reading 'productInfo')\n    at getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:736:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-16T05:47:44.131Z"}
{"originalMessage":"Order not found in DB for orderId: 68a01cdc3569fbd3c17bdd43","stack":"Error: Order not found in DB for orderId: 68a01cdc3569fbd3c17bdd43\n    at getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:737:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-16T05:54:27.119Z"}
{"originalMessage":"Order not found in DB for orderId: 68a01dab2991ccd2debe2e44","stack":"Error: Order not found in DB for orderId: 68a01dab2991ccd2debe2e44\n    at getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:737:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-16T05:57:51.983Z"}
{"originalMessage":"Cast to ObjectId failed for value \"{ orderId: 'SportsHub-2025-0209' }\" (type Object) at path \"_id\" for model \"orders\"","stack":"CastError: Cast to ObjectId failed for value \"{ orderId: 'SportsHub-2025-0209' }\" (type Object) at path \"_id\" for model \"orders\"\n    at SchemaObjectId.cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\cast.js:319:34)\n    at Query.cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:734:30)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-16T06:02:46.395Z"}
{"originalMessage":"Cast to ObjectId failed for value \"{ orderId: 'SportsHub-2025-0210' }\" (type Object) at path \"_id\" for model \"orders\"","stack":"CastError: Cast to ObjectId failed for value \"{ orderId: 'SportsHub-2025-0210' }\" (type Object) at path \"_id\" for model \"orders\"\n    at SchemaObjectId.cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\cast.js:319:34)\n    at Query.cast (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async getRazorpaySuccess (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\checkout.js:734:30)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-16T06:04:47.546Z"}
{"originalMessage":"transactionHistory validation failed: orderId: Path `orderId` is required., amount: Path `amount` is required.","stack":"ValidationError: transactionHistory validation failed: orderId: Path `orderId` is required., amount: Path `amount` is required.\n    at Document.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-16T07:49:16.443Z"}
{"originalMessage":"transactionHistory validation failed: amount: Path `amount` is required.","stack":"ValidationError: transactionHistory validation failed: amount: Path `amount` is required.\n    at Document.invalidate (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","controller":"checkout","action":"getRazorpaySuccess","userId":null,"level":"error","message":"Failed to get Razorpay success","timestamp":"2025-08-16T09:56:53.254Z"}
{"originalMessage":"E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"SportsHub-2025-0219\" }","stack":"MongoServerError: E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"SportsHub-2025-0219\" }\n    at UpdateOneOperation.execute (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\update.js:76:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.updateOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\collection.js:207:16)\n    at async model.Query.exec (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4604:63)\n    at async cancelorder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\youraccount.js:523:27)","controller":"youraccount","action":"cancelorder","level":"error","message":"Failed to cancel order","timestamp":"2025-08-16T10:34:38.123Z"}
{"originalMessage":"filter is not defined","stack":"ReferenceError: filter is not defined\n    at filterUserProducts (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\userproducts.js:139:24)\n    at Layer.handle [as handle_request] (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at checkBlockedUser (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\middleware\\checkBlockedUser.js:24:5)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"userproducts","action":"filterAndSearchUserProducts","level":"error","message":"Failed to filter/search user products","timestamp":"2025-08-17T05:20:59.718Z"}
{"originalMessage":"E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"SportsHub-2025-0220\" }","stack":"MongoServerError: E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"SportsHub-2025-0220\" }\n    at UpdateOneOperation.execute (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\update.js:76:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.updateOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\collection.js:207:16)\n    at async model.Query.exec (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4604:63)\n    at async cancelorder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\youraccount.js:523:27)","controller":"youraccount","action":"cancelorder","level":"error","message":"Failed to cancel order","timestamp":"2025-08-18T03:23:35.882Z"}
{"originalMessage":"E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"SportsHub-2025-0220\" }","stack":"MongoServerError: E11000 duplicate key error collection: sportshub.orders index: orderId_1 dup key: { orderId: \"SportsHub-2025-0220\" }\n    at UpdateOneOperation.execute (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\update.js:76:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.updateOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\collection.js:207:16)\n    at async model.Query.exec (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4604:63)\n    at async cancelorder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\youraccount.js:523:27)","controller":"youraccount","action":"cancelorder","level":"error","message":"Failed to cancel order","timestamp":"2025-08-18T03:24:25.585Z"}
{"originalMessage":"discount is not defined","stack":"ReferenceError: discount is not defined\n    at cancelorder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\youraccount.js:532:49)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","controller":"youraccount","action":"cancelorder","level":"error","message":"Failed to cancel order","timestamp":"2025-08-18T03:26:31.548Z"}
{"originalMessage":"The positional operator did not find the match needed from the query.","stack":"MongoServerError: The positional operator did not find the match needed from the query.\n    at UpdateOneOperation.execute (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\update.js:76:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.updateOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\collection.js:207:16)\n    at async model.Query.exec (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4604:63)\n    at async cancelorder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\youraccount.js:545:11)","controller":"youraccount","action":"cancelorder","level":"error","message":"Failed to cancel order","timestamp":"2025-08-18T06:29:57.116Z"}
{"originalMessage":"The positional operator did not find the match needed from the query.","stack":"MongoServerError: The positional operator did not find the match needed from the query.\n    at UpdateOneOperation.execute (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\update.js:76:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.updateOne (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongodb\\lib\\collection.js:207:16)\n    at async model.Query.exec (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\node_modules\\mongoose\\lib\\query.js:4604:63)\n    at async cancelorder (D:\\AMAL PAUL\\BROTOTYPE\\E-COMMERCE PROJECT (SPORTS HUB)\\Node Connect - Original file - connect mongose - latest - Copy\\controllers\\youraccount.js:542:9)","controller":"youraccount","action":"cancelorder","level":"error","message":"Failed to cancel order","timestamp":"2025-08-18T06:34:55.658Z"}
